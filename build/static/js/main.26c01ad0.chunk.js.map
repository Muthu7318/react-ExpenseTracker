{"version":3,"sources":["components/expenses/ExpenseDate.js","components/ui/Card.js","components/expenses/ExpenseItem.js","components/expenses/ExpenseFilter.js","components/expenses/ExpensesList.js","components/chart/ChartBar.js","components/chart/Chart.js","components/expenses/ExpensesChart.js","components/expenses/Expenses.js","components/newExpense/ExpenseForm.js","components/newExpense/NewExpense.js","components/saveExpense/SaveExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","Date","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesFilter","value","selectedYear","onChange","e","onFilterChange","target","ExpensesList","expenses","length","map","item","index","id","ChartBar","barFillHeight","maxValue","Math","round","console","log","style","height","label","Chart","dataPointValues","dataPoints","totalMax","max","ExpenseChart","chartDataPoint","expense","getMonth","Expenses","useState","toString","filteredYear","setFilteredYear","filteredExpense","filter","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","onSubmitExpenseData","type","min","step","onClick","onCancelClick","NewExpense","isEditing","setIsEditing","enteredExpenseData","ceil","random","onAddExpense","SaveExpense","localStorage","setItem","JSON","stringify","alert","initExpense","parse","getItem","App","updateExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26c01ad0.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  // console.log(props);\r\n  const month = new Date(props.date).toLocaleString(\"en-us\", { month: \"long\" });\r\n  const day = new Date(props.date).toLocaleString(\"en-us\", { day: \"2-digit\" });\r\n  const year = new Date(props.date).getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../ui/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li className=\"removedot\">\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">{`$${props.amount}`}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport \"./ExpenseFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (e) => {\r\n    props.onFilterChange(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selectedYear} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.expenses.length === 0) {\r\n    return (\r\n      <h2 className=\"expenses-list__fallback\">\r\n        No Expense Found for {props.year}\r\n      </h2>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"expeneses-list\">\r\n      {props.expenses.map((item, index) => (\r\n        <ExpenseItem\r\n          key={item.id}\r\n          title={item.title}\r\n          amount={item.amount}\r\n          date={item.date}\r\n        ></ExpenseItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"./css/chartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  // debugger;\r\n  if (props.maxValue > 0) {\r\n    // debugger;\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n    console.log(barFillHeight);\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"./css/chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((item) => item.value);\r\n  console.log(dataPointValues);\r\n  const totalMax = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((item) => (\r\n        <ChartBar\r\n          key={item.label}\r\n          value={item.value}\r\n          maxValue={totalMax}\r\n          label={item.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../chart/Chart\";\r\n\r\nconst ExpenseChart = (props) => {\r\n  const chartDataPoint = [\r\n    {\r\n      label: \"Jan\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Feb\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Mar\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Apr\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"May\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Jun\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Jul\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Aug\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Sep\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Oct\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Nov\",\r\n      value: 0,\r\n    },\r\n    {\r\n      label: \"Dec\",\r\n      value: 0,\r\n    },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    // debugger;\r\n    const expenseMonth = new Date(expense.date).getMonth();\r\n    chartDataPoint[expenseMonth].value += expense.amount;\r\n  }\r\n  return <Chart dataPoints={chartDataPoint} />;\r\n};\r\nexport default ExpenseChart;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../ui/Card\";\r\n\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"./ExpenseFilter\";\r\nimport { useState } from \"react\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpenseChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  // console.log(expenses);\r\n  const [filteredYear, setFilteredYear] = useState(\r\n    new Date().getFullYear().toString()\r\n  );\r\n  const FilterChangeHandler = (year) => {\r\n    setFilteredYear(year);\r\n  };\r\n  // console.log(filteredYear);\r\n\r\n  const filteredExpense = props.expenses.filter((item) => {\r\n    // debugger;\r\n    return new Date(item.date).getFullYear().toString() === filteredYear;\r\n  });\r\n  // console.log(filteredExpense);\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selectedYear={filteredYear}\r\n          onFilterChange={FilterChangeHandler}\r\n        ></ExpensesFilter>\r\n        <ExpenseChart expenses={filteredExpense} />\r\n        <ExpensesList year={filteredYear} expenses={filteredExpense} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import \"./css/ExpenseForm.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: \"\",\r\n  //   enteredAmount: \"\",\r\n  //   enteredDate: \"\",\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // console.log(...userInput);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    // console.log(expenseData);\r\n    props.onSubmitExpenseData(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\"0\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"Date\"\r\n            value={enteredDate}\r\n            min=\"2022-01-01\"\r\n            max=\"2023-01-01\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancelClick}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import \"./css/NewExpense.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useState } from \"react\";\r\n\r\nconst NewExpense = (props) => {\r\n  let [isEditing, setIsEditing] = useState(false);\r\n  const onSubmitExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.ceil(Math.random() * 10000),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}> Add New Expense </button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onCancelClick={stopEditingHandler}\r\n          onSubmitExpenseData={onSubmitExpenseDataHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import \"../newExpense/NewExpense\";\r\n\r\nconst SaveExpense = (props) => {\r\n  const saveExpenseHandler = () => {\r\n    console.log(props.expenses);\r\n    localStorage.setItem(\"expenses\", JSON.stringify(props.expenses));\r\n    alert(\"your expense is saved\");\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <button onClick={saveExpenseHandler}> Save Expenses </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SaveExpense;\r\n","// import ExpenseItem from \"./components/ExpenseItem\";\nimport Expenses from \"./components/expenses/Expenses\";\nimport NewExpense from \"./components/newExpense/NewExpense\";\nimport SaveExpense from \"./components/saveExpense/SaveExpense\";\nimport React, { useState } from \"react\";\n\n// const initExpense = [\n//   {\n//     id: \"e1\",\n//     title: \"News Paper\",\n//     amount: 94.12,\n//     date: new Date(2020, 7, 14),\n//   },\n//   { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n//   {\n//     id: \"e3\",\n//     title: \"Car Insurance\",\n//     amount: 294.67,\n//     date: new Date(2021, 2, 28),\n//   },\n//   {\n//     id: \"e4\",\n//     title: \"New Desk (Wooden)\",\n//     amount: 450,\n//     date: new Date(2021, 5, 12),\n//   },\n// ];\n\nconst initExpense = JSON.parse(localStorage.getItem(\"expenses\") || \"[]\");\n\nconst App = () => {\n  const [expenses, updateExpenses] = useState(initExpense);\n  // return React.createElement(\n  //   \"div\",\n  //   {},\n  //   React.createElement(\"h2\", {}, \"Lets get started\"),\n  //   React.createElement(Expenses, { expenses: expenses })\n  // );\n\n  const addExpenseHandler = (expense) => {\n    // expenses = expense;\n    console.log(expense);\n    updateExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses}></Expenses>\n      <SaveExpense expenses={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}